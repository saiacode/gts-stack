version: "3.8"

services:
  meteor:
    image: aditzend/gtsystem:4.0.4
    deploy:
      placement:
        constraints:
          - node.labels.gts == production
      labels:
        - traefik.enable=true
        - traefik.docker.network=traefik-public
        - traefik.constraint-label=traefik-public
        - traefik.http.routers.${NAME}-meteor-http.rule=Host(`${DOMAIN}`)
        - traefik.http.routers.${NAME}-meteor-http.entrypoints=http
        - traefik.http.routers.${NAME}-meteor-http.middlewares=https-redirect
        - traefik.http.routers.${NAME}-meteor-https.rule=Host(`${DOMAIN}`)
        - traefik.http.routers.${NAME}-meteor-https.entrypoints=https
        - traefik.http.routers.${NAME}-meteor-https.tls=true
        - traefik.http.routers.${NAME}-meteor-https.tls.certresolver=le
        - traefik.http.services.${NAME}-meteor.loadbalancer.server.port=${METEOR_PORT-3000}
    #ports:
     # - 3000:3000
    environment:
      MONGO_URL: ${MONGO_URL}
      ROOT_URL: "https://${DOMAIN}"
      EXACT_NODE_VERSION: "true"
      NODE_VERSION: "4.8.2"
      METEOR_SETTINGS: ${METEOR_SETTINGS}
    networks:
      - mongo
      - ingress
  sftp:
    image: writl/sftp
    labels:
      gts: "sftp"
    volumes:
      - sftp:/data/incoming
      - ssh_vol:/ssh
    ports:
      - 53000:22
    networks:
      - mongo
    environment:
      - USER:sftp
      - PASS=${SFTP_PASS}
      - USER_ID=33
      - GROUP_ID=33
networks:
  mongo:
    external: true
    name: mongodb-public
  ingress:
    external: true
    name: traefik-public
volumes:
  sftp:
  ssh_vol:
    external: true
